@model BSNCapstone.Models.Group

@{
    Layout = null;
    var cloudinary = (CloudinaryDotNet.Cloudinary)ViewBag.cloudinary;
    var allUser = (List<BSNCapstone.Models.ApplicationUser>)ViewBag.allUser;
    string currentUserId = ViewBag.currentUser;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Trang thành viên nhóm</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/Trangnhom.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="~/Script/capstone-rename-later-v1.0.js"></script>
</head>

<body>
    <nav class="navbar navbar-default" style="background-color: black">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" href="#"><img id="logo" src="logo.png" class="img-rounded" alt="Trolltunga Norway" style="width:180px; height:40px;margin-top:-5%"> </a>
            </div>
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <form class="navbar-form navbar-left" style="padding-left: 10%;">
                    <div class="nav-space"></div>
                    <div class="form-group">
                        <input type="text" class="form-control" style="width:150%;" placeholder="Tìm kiếm">
                    </div>
                </form>
                <ul class="nav navbar-nav navbar-right" style="padding-right: 15%;">
                    <li><a href="#"><i class="glyphicon glyphicon-user"></i> </a></li>
                    <li><a href="#"><i class="glyphicon glyphicon-home"></i> </a></li>
                    <li><a href="#"><i class="glyphicon glyphicon-comment"></i> </a></li>
                    <li><a href="#"><i class="glyphicon glyphicon-bell"></i> </a></li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="glyphicon glyphicon-cog"></i><span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="#">Tạo nhóm</a></li>
                            <li><a href="@Url.Action("Setting", "Groups", new { id = Model.Id })">Cài đặt</a></li>
                            <li><a href="#">Đăng xuất</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-------------------Dưới thanh bar-------------------------->
    <!-------------------Cover & avatar------------------------->

    <div class="col-md-12 avatar-cover" style="padding:0; height: 410px;">
        <img class="cover-img" src="AnhCoverSach/coversach2.jpg" alt="Trolltunga Norway">
        <div class="change-cover">
            <button class="change-cover-button"><i class="glyphicon glyphicon-camera"></i><span> Thay đổi ảnh bìa</span></button>
        </div>
        <div class="row">
            <div class="avatar col-md-2">
                <img class="avatar-img" src="Anhtacgia/Jeff%20Kinney_tacgia.jpg" alt="Trolltunga Norway">
                <div class="change-avatar">
                    <button class="change-avatar-button"><i class="glyphicon glyphicon-camera"></i><span> Thay đổi ảnh cá nhân</span></button>
                </div>
            </div>
        </div>
        <div>
            <i class="glyphicon glyphicon-tag grouptag"></i><span class="grouptag" style="top:-33px;"> [Harry Potter & the Deathly Hallows]   </span>
        </div>
        <div class="cover-interaction">
            <button class="button buttonRe" onclick="location.href='@Url.Action("Setting", "Groups", new { id = Model.Id })'">Cài đặt</button>
            @if (Model.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) == null)
            {
                <button class="button buttonRe" onclick="GroupRequestHandle('@Model.Id', '@currentUserId', '1')">Tham gia</button>
            }
            else
            {
                <button class="button buttonRe" onclick="GroupRequestHandle('@Model.Id', '@currentUserId', '2')">Đã Tham gia</button>
            }
            <button class="button buttonRe" data-toggle="modal" data-target="#ModalReport">Báo cáo</button>
            <div id="ModalReport" class="modal fade" role="dialog">
                <div class="modal-dialog ">
                    <!-- Modal content-->
                    <div class="modal-content ">
                        <div style="background-color: #F7E8AF;" class="modal-header clearfix">
                            <div class="row">
                                <div class="col-md-8">
                                    <h4 class="modal-title"><b>Giúp chúng tôi hiểu điều đang xảy ra</b></h4>
                                </div>
                                <div class="col-md-4">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                </div>
                            </div>
                        </div>
                        <div class="modal-body clearfix">
                            <div class="content">
                                <div class="row">
                                    <div class="col-md-1" style="margin-top: 5px;">
                                        <img src="/AnhAvaNguoiDung/avaVan.jpg" style="width:50px;height:50px" />
                                    </div>
                                    <div class="col-md-11" class="radio">
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio"> Nhóm này đang quấy rối tôi
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio">Nhóm này đang quấy rối một người bạn
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio">Nội dung khiêu dâm
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio">Spam hoặc lừa đảo
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio">Hành vi bạo lực hoặc gây hại
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio">Ngôn ngữ kích động thù địch
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio">Nhóm này để bán ma túy, súng hoặc các hàng hóa được kiểm soát khác
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="optradio"><input type="text" id="Othercomment" class="form-control" placeholder="Ý kiến khác">
                                            </label>
                                        </div>
                                        <div class="divider-horizontal"></div>
                                        <div class="BT">
                                            <button id="buttonCancel" class="btn btn-default">Hủy</button>
                                            <button id="buttonPost" class="btn btn-default">Gửi</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--------------- hết Báo cáo -------------------------------------->
        </div>

    </div>

    <ul class="nav nav-tabs">
        <li role="presentation"><a href="TrangNhom-Thaoluan.html">Thảo luận</a></li>
        <li role="presentation" class="active"><a href="TranhNhom-Thanhvien.html">Thành viên</a></li>
        <li role="presentation"><a href="TrangNhom-Anh.html">Ảnh</a></li>
    </ul>
    <div class="container pills">
        <ul class="nav nav-pills">
            <li class="active"><a data-toggle="pill" href="#nomalMembers">Thành viên thường</a></li>
            <li><a data-toggle="pill" href="#Admins">Quản trị viên</a></li>
        </ul>
        <div class="tab-content">
            <div id="nomalMembers" class="tab-pane fade in active">
                <div class="col-md-12 listthanhvien">
                    @if (Model.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) != null)
                    {
                        foreach (var member in Model.GroupMembers)
                        {
                            if (member.RoleInGroup == "user")
                            {
                                <div class="col-md-4 avatarthanhvien">
                                    @*@member.UserId
                                        @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                                            .Height(130).Width(130).Crop("fill")).BuildImageTag(Model.ImgPublicId,
                                            new CloudinaryDotNet.StringDictionary("class=thumbnail inline")))*@
                                    <img src="Anhtacgia/James%20Patterson_tacgia.jpg" alt="username">
                                    <a href="@Url.Action("Details", "Users", new { id = member.UserId })">
                                        <b>@allUser.Where(x => x.Id.Equals(member.UserId)).FirstOrDefault().UserName</b>
                                    </a>
                                    @if (Model.GroupMembers.Where(x => x.UserId.Equals(currentUserId)).FirstOrDefault().RoleInGroup != "user")
                                    {
                                        <a type="button" class="glyphicon glyphicon-cog" data-toggle="dropdown"></a>
                                        <ul class="dropdown-menu">
                                            <li><a href="@Url.Action("SetupMember", "Groups", new { groupId = Model.Id, userId = member.UserId, option = 1 })">Thêm với tư cách quản lí</a></li>
                                            @*<li><input type="submit" onclick="SetupMember('@Model.Id', '@member.UserId', '1')"/></li>*@
                                            <li><a href="@Url.Action("SetupMember", "Groups", new { groupId = Model.Id, userId = member.UserId, option = 3 })">Xóa khỏi nhóm</a></li>
                                        </ul>
                                    }
                                </div>
                            }
                        }
                    }
                    else
                    {
                        foreach (var member in Model.GroupMembers)
                        {
                            if (member.RoleInGroup == "user")
                            {
                                <div class="col-md-4 avatarthanhvien">
                                    @*@member.UserId
                                        @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                                            .Height(130).Width(130).Crop("fill")).BuildImageTag(Model.ImgPublicId,
                                            new CloudinaryDotNet.StringDictionary("class=thumbnail inline")))*@
                                    <img src="Anhtacgia/James%20Patterson_tacgia.jpg" alt="username">
                                    <a href="@Url.Action("Details", "Users", new { id = member.UserId })">
                                        <b>@allUser.Where(x => x.Id.Equals(member.UserId)).FirstOrDefault().UserName</b>
                                    </a>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
            <div id="Admins" class="tab-pane fade">
                <div class="col-md-12 listadmin">
                    @if (Model.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) != null)
                    {
                        foreach (var member in Model.GroupMembers)
                        {
                            if (member.RoleInGroup != "user")
                            {
                                <div class="col-md-4 avatarthanhvien">
                                    <img src="Anhtacgia/Jeff%20Kinney_tacgia.jpg" alt="username">
                                    <a href="@Url.Action("Details", "Users", new { id = member.UserId })">
                                        <b>@allUser.Where(x => x.Id.Equals(member.UserId)).FirstOrDefault().UserName</b>
                                    </a>
                                    @if (Model.GroupMembers.Where(x => x.UserId.Equals(currentUserId)).FirstOrDefault().RoleInGroup != "user")
                                    {
                                        <a type="button" class="glyphicon glyphicon-cog" data-toggle="dropdown"></a>
                                        <ul class="dropdown-menu">
                                            <li><a href="@Url.Action("SetupMember", "Groups", new { groupId = Model.Id, userId = member.UserId, option = 2 })">Xóa với tư cách quản lí</a></li>
                                            <li><a href="@Url.Action("SetupMember", "Groups", new { groupId = Model.Id, userId = member.UserId, option = 3 })">Xóa khỏi nhóm</a></li>
                                        </ul>
                                    }
                                </div>
                            }
                        }
                    }
                    else
                    {
                        foreach (var member in Model.GroupMembers)
                        {
                            if (member.RoleInGroup != "user")
                            {
                                <div class="col-md-4 avatarthanhvien">
                                    <img src="Anhtacgia/Jeff%20Kinney_tacgia.jpg" alt="username">
                                    <a href="@Url.Action("Details", "Users", new { id = member.UserId })">
                                        <b>@allUser.Where(x => x.Id.Equals(member.UserId)).FirstOrDefault().UserName</b>
                                    </a>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <!-----------------------Dưới cover & ava--------------------------------->
    <div class="tennhom">
        @Html.ActionLink(@Model.GroupName, "MainPage", new { id = Model.Id })
        <i class="glyphicon glyphicon-lock" style="font-size:50%;"></i><span class="" style="top:-33px;font-size:60%;">@Html.DisplayFor(m => m.GroupType)</span>
    </div>
    <!-----------------------List thành viên--------------------------------->
    <!-----------------------Hết List thành viên--------------------------------->

</body>

</html>
<script>
    function GroupRequestHandle(groupId, userId, option) {
        var formData = new FormData();
        formData.append("groupId", groupId);
        formData.append("userId", userId);
        formData.append("option", option);
        $.ajax({
            type: "POST",
            url: "@Url.Action("GroupRequestHandle", "Groups")",
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,

            success: function (result) {
                if (result != "") {
                    window.alert(result);
                    window.location.reload();
                }
                else {
                    window.location.reload();
                }
            }
        });
    };
</script>