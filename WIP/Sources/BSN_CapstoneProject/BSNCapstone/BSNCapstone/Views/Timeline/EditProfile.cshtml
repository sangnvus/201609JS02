@model BSNCapstone.Models.UserProfile
@{
    ViewBag.Title = "Thông tin cá nhân";
    var cloudinary = (CloudinaryDotNet.Cloudinary)ViewBag.cloudinary;
    var user = (BSNCapstone.Models.ApplicationUser)ViewBag.user;
    var currentUserId = ViewBag.currentUser;
    var allUser = (List<BSNCapstone.Models.ApplicationUser>)ViewBag.allUser;
    var listInteractBook = (List<BSNCapstone.Models.Book>)ViewBag.listInteractBook;
    var allAuthor = (List<BSNCapstone.Models.Author>)ViewBag.allAuthor;
}

<!DOCTYPE html>
<html lang="en">
<body>
    <!-------------------Cover & avatar------------------------->
    <div class="hidden" id="ImageChangeUrl" data-url="@Url.Action("ChangeImage", "Groups")" data-id="@user.Id"></div>
    <div class="col-md-12 avatar-cover" style="padding:0; height: 410px;">
        @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
            .Height(350).Width(1349).Crop("fill")).BuildImageTag(user.Cover,
                new CloudinaryDotNet.StringDictionary("class=cover-img")))
        @if (Model.id == currentUserId)
        {
            <div class="change-cover">
                <span class="btn btn-file">
                    <i class="glyphicon glyphicon-camera" style="color: white;"></i>
                        <span style="color: white;">Thay đổi ảnh bìa</span>
                    <input type="file" id="imgInpCover" accept=".jpg, .jpeg, .png, .bmp">
                </span>
            </div>
        }
        <div class="row">
            <div class="avatar">
                @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                        .Height(200).Width(200).Crop("mpad")).BuildImageTag(user.Avatar,
                            new CloudinaryDotNet.StringDictionary("class=avatar-img")))
                @if (Model.id == currentUserId)
                {
                    <div class="change-avatar">
                        <span class="btn btn-file">
                            <i class="glyphicon glyphicon-camera" style="color: white;"></i>
                                <span style="color: white;">Thay đổi ảnh cá nhân</span>
                            <input type="file" id="imgInpAva" accept=".jpg, .jpeg, .png, .bmp">
                        </span>
                    </div>
                }
            </div>
        </div>
    </div>
    <!-----------------------UNDER cover & ava--------------------------------->
    <div class="tencanhan"><a href="@Url.Action("Details", "Timeline", new { id = @Model.id })"><b>@user.UserName</b></a></div>
    <div class="col-ms-12">
        <!------------LEFT SIDE--------------->
        <div class="col-md-2 col-sm-4 col-xs-12 sidenav">
            <div class="text-center" class="panel-heading">
                <h4><strong>THEO DÕI</strong></h4>
            </div>
            <br>
            <div class="row">
                @foreach (var item in user.Following)
                {
                    <div class="col-md-6 " style="padding-left:5px;">
                        @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                            .Height(117).Width(90).Crop("fill")).BuildImageTag(allUser.Find(x => x.Id.Equals(item)).Avatar,
                                new CloudinaryDotNet.StringDictionary("class=avatar-img")))
                        <ul class="list-group">
                            <li>
                                <span>
                                    <i data-toggle="tooltip" title="@allUser.Find(x => x.Id.Equals(item)).UserName" id="tacgia">
                                        <strong>
                                            @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(allUser.Find(x => x.Id.Equals(item)).UserName.ToLower()) 
                                        </strong> 
                                    </i>
                                </span>
                            </li>
                        </ul>
                    </div>
                }
            </div>
        </div>
        <!--CENTER-->
        <div class="container col-md-6">
            <div class="userInfor">
                <h2>Thông tin cá nhân</h2>
                <div class="divider-horizontal"></div>
                <br>
                <div class="col-md-12">
                    <div class="col-md-12">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <form class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, new { @class = "col-sm-4 control-label" })
                                @Html.TextBoxFor(model => model.UserName, new { @placeholder = "Họ tên", @class = "form-control", @id = "name", @style = "width: 60%;" })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger", @style = "padding-left: 40%;" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, new { @class = "col-sm-4 control-label" })
                                <label class="radio-inline" style="margin-left:30px;">
                                    @Html.RadioButtonFor(model => model.Gender, "Male") Nam
                                </label>
                                <label class="radio-inline" style="margin-left:30px;">
                                    @Html.RadioButtonFor(model => model.Gender, "Female") Nữ
                                </label>
                                <div>
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger", @style = "padding-left: 40%;" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DOB, new { @class = "col-sm-4 control-label" })
                                @Html.TextBoxFor(model => model.DOB, new { @placeholder = "Ngày sinh", @class = "form-control", @style = "width: 60%;" })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger", @style = "padding-left: 40%;" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, new { @class = "col-sm-4 control-label" })
                                @Html.TextBoxFor(model => model.Address, new { @placeholder = "Địa chỉ", @class = "form-control", @style = "width: 60%;" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger", @style = "padding-left: 40%;" })
                            </div>
                            <div class="form-inline" style="position:relative;left:50%;margin-top:20px;">
                                <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Details", "Timeline", new { id = user.Id })'">Hủy</button>
                                <button type="submit" class="btn btn-info">Lưu</button>
                            </div>
                        </form>   
                        }
                    </div>
                </div>
            </div>
        </div>
        <!--  RIGHT SIDE -->
        <div class="col-md-4 col-sm-4 col-xs-12 sidenav">
            <div class="text-center" class="panel-heading">
                <h4><strong>ĐÁNH GIÁ VÀ ĐỌC GẦN ĐÂY</strong></h4>
            </div>
            <br>
            <br>
            <!--  Bắt đầu phần ĐÁNH GIÁ VÀ ĐỌC GẦN ĐÂY -->
            <div class="row">
                @foreach (var interactBook in listInteractBook)
                {
                <div class="col-md-6" style="padding-left:5px;">
                    <!--VÒNG FOR BẮT ĐẦU TỪ DIV NÀY-->
                    <div class="col-md-6" style="padding-left:0px;">
                        @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                            .Height(117).Width(90).Crop("fill")).BuildImageTag(interactBook.ImgPublicId,
                                new CloudinaryDotNet.StringDictionary("class=img-rounded")))
                    </div>
                    <fieldset class="rating" style="padding-left:px;">
                        <input type="radio" id="star5" name="rating" value="5" />
                        <label class="full" for="star5" title="Awesome - 5 stars"></label>
                        <input type="radio" id="star4" name="rating" value="4" />
                        <label class="full" for="star4" title="Pretty good - 4 stars"></label>
                        <input type="radio" id="star3" name="rating" value="3" />
                        <label class="full" for="star3" title="Meh - 3 stars"></label>
                        <input type="radio" id="star2" name="rating" value="2" />
                        <label class="full" for="star2" title="Kinda bad - 2 stars"></label>
                        <input type="radio" id="star1" name="rating" value="1" />
                        <label class="full" for="star1" title="Sucks big time - 1 star"></label>
                    </fieldset>
                    <h5 style="float:right;">@interactBook.RateTime đánh giá</h5>
                    <br>
                    <br>
                    <div class="col-md-12 list-group">
                        <span>
                            <strong data-toggle="tooltip" title="@interactBook.BookName.ToUpper()">@interactBook.BookName.ToUpper()</strong>
                            <br>
                            @foreach (var author in interactBook.Authors)
                            {
                                if (interactBook.Authors.Last() == author)
                                {
                                    <i data-toggle="tooltip" title="@allAuthor.Where(x => x.Id.ToString().Equals(author)).FirstOrDefault().AuthorName" class="authorname">
                                        <strong>@System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(@allAuthor.Where(x => x.Id.ToString().Equals(author)).FirstOrDefault().AuthorName.ToLower()) </strong>
                                    </i>
                                }
                                else
                                {
                                    <i data-toggle="tooltip" title="@allAuthor.Where(x => x.Id.ToString().Equals(author)).FirstOrDefault().AuthorName" class="authorname">
                                        <strong>@System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(@allAuthor.Where(x => x.Id.ToString().Equals(author)).FirstOrDefault().AuthorName.ToLower()), </strong>
                                    </i>
                                }
                            }
                        </span>
                    </div>
                </div>
                }
            </div>
            <br>
        </div>
    </div>
    <!-- Kết thúc ------------- -->
    <div id="loader" class="modal fade" role="dialog">
        <div class="modal-dialog" style="width: 100%; height: 100%; margin: 0;">
            <!-- Modal content-->
            <div class="modal-content" style="background-color: transparent; height: 100%; box-shadow: initial; border-bottom-color: transparent;">
                <div class="loader"></div>
            </div>
        </div>
    </div>
</body>

</html>
@section scripts {
    <link rel="stylesheet" href="~/Content/loader.css" />
    <link rel="stylesheet" href="~/Content/Trangcaidat.css">
    <script src="~/Scripts/Custom/group.js"></script>
}