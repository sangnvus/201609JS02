@model BSNCapstone.ViewModels.GroupSettingViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Trang cài đặt nhóm";
    var currentUserId = ViewBag.currentUser;
    //var listMember = (List<BSNCapstone.ViewModels.GroupMembersViewModel>)ViewBag.listMember;
    //var listRequest = (List<string>)ViewBag.listRequest;
    var allUser = (List<BSNCapstone.Models.ApplicationUser>)ViewBag.allUser;
    var cloudinary = (CloudinaryDotNet.Cloudinary)ViewBag.cloudinary;
    var group = (BSNCapstone.Models.Group)ViewBag.group;
}

<!DOCTYPE html>
<html lang="en">

@*<head>
    <title>Trang cài đặt nhóm</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/Content/Trangnhom-caidat.css">
    <script src="~/Scripts/capstone-rename-later-v1.0.js"></script>
</head>*@

<body>
    <!-------------------Dưới thanh bar-------------------------->
    <!-------------------Cover & avatar------------------------->
    <div class="hidden" id="GroupHandleRequestUrl" data-url="@Url.Action("GroupRequestHandle", "Groups")"></div>
    <div class="hidden" id="ImageChangeUrl" data-url="@Url.Action("ChangeImage", "Groups")" data-id="@Model.Id"></div>
        <div class="col-md-12 avatar-cover" style="padding:0; height: 410px;">
            @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
            .Height(350).Width(1349).Crop("fill")).BuildImageTag(group.CoverImg,
                new CloudinaryDotNet.StringDictionary("class=cover-img")))
            @foreach (var member in group.GroupMembers)
            {
                if (member.UserId.Equals(currentUserId) && member.RoleInGroup != "user")
                {
                    <div class="change-cover">
                        <span class="btn btn-file">
                            <i class="glyphicon glyphicon-camera" style="color: white;"></i>
                            <span style="color: white;">Thay đổi ảnh bìa</span>
                            <input type="file" id="imgInpCover" accept=".jpg, .jpeg, .png, .bmp">
                        </span>
                    </div>
                }
            }
            <div class="row">
                <div class="avatar">
                    <div class="upload-image">
                        @*<img class="avatar-img" src="Anhtacgia/Jeff%20Kinney_tacgia.jpg" alt="Trolltunga Norway">*@
                        @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                        .Height(200).Width(200).Crop("mpad")).BuildImageTag(group.AvaImg,
                            new CloudinaryDotNet.StringDictionary("class=avatar-img")))
                        @foreach (var member in group.GroupMembers)
                        {
                            if (member.UserId.Equals(currentUserId) && member.RoleInGroup != "user")
                            {
                                <div class="change-avatar">
                                    <span class="btn btn-file">
                                        <i class="glyphicon glyphicon-camera" style="color: white;"></i>
                                        <span style="color: white">Thay đổi ảnh cá nhân</span>
                                        <input type="file" id="imgInpAva" accept=".jpg, .jpeg, .png, .bmp">
                                    </span>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div>
                <div class="cover-interaction">
                    <button class="button buttonRe" onclick="location.href='@Url.Action("Setting", "Groups", new { id = Model.Id })'">Cài đặt</button>
                    @if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) == null)
                    {
                        <button class="button buttonRe" onclick="GroupRequestHandle('@Model.Id', '@currentUserId', '1')">Tham gia</button>
                    }
                    else
                    {
                        if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)).RoleInGroup != "creator")
                        {
                            <button class="button buttonRe" onclick="GroupRequestHandle('@Model.Id', '@currentUserId', '2')">Rời nhóm</button>
                        }
                    }
                    <button class="button buttonRe">Báo cáo</button>
                </div>

            </div>
        </div>
        <!--------------------------Tên nhóm----------------------------->
        <div class="tennhom"><a href="@Url.Action("MainPage", "Groups", new { id = Model.Id })"><b>@Html.DisplayFor(model => model.GroupName)</b></a></div>
        <!-------------------Dưới Covers & Avatar------------------------->
        <div class="container-fluid text-left">
            <div class="row content">
                <div class="col-md-2 col-sm-4 col-xs-12 sidenav">
                    <!--------------------------->
                    <div id="nhom" class="text-center" class="panel-heading"><b>MÔ TẢ</b></div>
                    <br>
                    @Html.TextAreaFor(model => model.Description, new { @style = "width:100%; height:100px; resize: none;", @readonly = "readonly" })
                    <p>Thành viên : @group.GroupMembers.Count() thành viên</p>

                    <div id="nhom" class="text-center" class="panel-heading"><b>NHÓM</b></div>
                    <ul class="list-group">
                        <li>
                            <a href="#" data-toggle="tooltip" title="Hội những người yêu thích truyện HarryPotter">
                                <i class="glyphicon glyphicon-book"></i>
                                <span>Hội yêu thích truyện Harry Potter</span>
                            </a>
                        </li>
                        <li>
                            <a href="#" data-toggle="tooltip" title=" Hội hâm mộ Nguyễn Nhật Ánh ">
                                <i class="glyphicon glyphicon-heart"></i>
                                <span>Hội yêu thích truyện Harry Potter</span>
                            </a>
                        </li>
                        <li>
                            <a href="#" data-toggle="tooltip" title=" Hội hâm mộ J. K. Rowling ">
                                <i class="glyphicon glyphicon-heart"></i>
                                <span>Hội yêu thích truyện Harry Potter</span>
                            </a>
                        </li>
                    </ul>
                    <p class="text-right">
                        <button type="button" class="btn btn-link">Xem thêm</button>
                    </p>
                </div>
                <div class="col-md-10 col-sm-8 col-xs-12 text-left">
                    <div class="container pills">
                        <ul class="nav nav-pills">
                            <li class="active"><a data-toggle="pill" href="#infor">Thông tin nhóm</a></li>
                            @foreach (var member in group.GroupMembers)
                            {
                                if (member.UserId.Equals(currentUserId) && member.RoleInGroup != "user")
                                {
                                    <li><a data-toggle="pill" href="#request">Yêu cầu tham gia</a></li>
                                }
                            }
                        </ul>
                        <div class="tab-content">
                            <div id="infor" class="tab-pane fade in active">
                                <div class="">
                                    @*<form class="form-horizontal editInfor" style="margin-top:5%">*@
                                    @if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) == null ||
                                        group.GroupMembers.Where(x => x.UserId.Equals(currentUserId)).FirstOrDefault().RoleInGroup == "user")
                                    {
                                        <div class="form-horizontal" style="margin-top:5%">
                                            <div class="form-group editform">
                                                @Html.DisplayNameFor(model => model.GroupName)
                                                <p>@Html.DisplayFor(model => model.GroupName)</p>
                                            </div>
                                            <div class="form-group editform">
                                                @Html.DisplayNameFor(model => model.Description)
                                                <p>@Html.TextAreaFor(model => model.Description, new { @readonly = "readonly", @style = "width:100%; height:100px; resize: none;" })</p>
                                            </div>
                                            <div class="form-group editform">
                                                @Html.DisplayNameFor(model => model.GroupType) :
                                                @Html.DisplayFor(model => model.GroupType)
                                            </div>
                                        </div>
                                    }
                                    @*@if (Model.GroupMembers.Where(x => x.UserId.Equals(currentUserId)).FirstOrDefault().RoleInGroup != "user")*@
                                    else
                                    {
                                        using (Html.BeginForm("Setting", "Groups", FormMethod.Post, new { @class = "form-horizontal editInfor", @style = "margin-top:5%" }))
                                        {
                                            @*<form class="form-horizontal editInfor" style="margin-top:5%">*@
                                            @Html.ValidationSummary(true)
                                            @Html.HiddenFor(model => model.Id)
                                            @Html.HiddenFor(model => model.CreatorId)
                                            @Html.HiddenFor(model => model.Lock)
                                            <div class="form-group editform">
                                                @Html.LabelFor(model => model.GroupName)
                                                <p>@Html.EditorFor(model => model.GroupName)</p>
                                                <div class="col-md-10">
                                                    @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @Html.HiddenFor(model => model.Tag)
                                            <div class="form-group editform">
                                                @Html.LabelFor(model => model.Description)
                                                @Html.TextAreaFor(model => model.Description, new { @style = "width:100%; height:100px; resize:none;", @title = Model.Description })
                                                @Html.ValidationMessageFor(model => model.Description)
                                            </div>
                                            <div class="form-group editform">
                                                @Html.LabelFor(model => model.GroupType)
                                                @Html.ValidationMessageFor(model => model.GroupType) <br />
                                                <label class="radio-inline" style="margin-left:50px">
                                                    @Html.RadioButtonFor(model => model.GroupType, "Public") Công khai
                                                </label>
                                                <label class="radio-inline" style="margin-left:40px">
                                                    @Html.RadioButtonFor(model => model.GroupType, "Private") Kín
                                                </label>
                                            </div>
                                            <div class="form-inline editform" style="margin-left:50px;">
                                                <input type="submit" value="Lưu" class="btn btn-default" />
                                            </div>
                                            @*</form>*@
                                        }
                                    }
                                    @*</form>*@
                                </div>
                            </div>
                            @if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) != null)
                            {
                                foreach (var member in group.GroupMembers)
                                {
                                    if (member.RoleInGroup != "user")
                                    {
                                        <div id="request" class="tab-pane fade">
                                            <div class="">
                                                <div class="memberRequest" style="margin-top:5%">
                                                    <div class="form-inline">
                                                        <label style="margin-left:30px;font-size:130%;">Yêu cầu tham gia</label>
                                                        <button type="submit" class="btn btn-default" style="margin-left:400px;" onclick="GroupRequestHandle('@Model.Id', '', '5')">Chấp nhận tất cả</button>
                                                        <button type="submit" class="btn btn-default" onclick="GroupRequestHandle('@Model.Id', '', '6')">Từ chối tất cả</button>
                                                    </div>
                                                    <div class="divider-horizontal"></div>
                                                    <div class="col-md-12">
                                                        @foreach (var request in group.ListJoinRequest)
                                                        {
                                                            <div class="col-md-3 avatarthanhvien">
                                                                <img src="Anhtacgia/James%20Patterson_tacgia.jpg" alt="username" style="margin-bottom:10px;">
                                                                <a href="@Url.Action("Details", "Users", new { id = request })">
                                                                    <b>@allUser.Where(x => x.Id.Equals(request)).FirstOrDefault().UserName</b>
                                                                </a>
                                                                <button type="submit" class="btn btn-default btn-xs" onclick="GroupRequestHandle('@Model.Id', '@request', '3')">Chấp nhận</button>
                                                                <button type="submit" class="btn btn-default btn-xs" onclick="GroupRequestHandle('@Model.Id', '@request', '4')">Từ chối</button>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
</body>
</html>
@section scripts {
    <link rel="stylesheet" href="~/Content/Trangnhom-caidat.css">
    <script src="~/Scripts/capstone-rename-later-v1.0.js"></script>
    <script src="~/Scripts/Custom/group.js"></script>
}
