@model BSNCapstone.ViewModels.GroupSettingViewModel
@using MongoDB.Bson;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Trang cài đặt nhóm";
    var currentUserId = ViewBag.currentUser;
    var allUser = (List<BSNCapstone.Models.ApplicationUser>)ViewBag.allUser;
    var cloudinary = (CloudinaryDotNet.Cloudinary)ViewBag.cloudinary;
    var group = (BSNCapstone.Models.Group)ViewBag.group;
    var reportContentList = (List<string>)ViewBag.groupReport;
    var listGroupOfUser = (List<BSNCapstone.Models.Group>)ViewBag.listGroupOfUser; <!--DANGVH BỔ SUNG-->
}

<!DOCTYPE html>
<html lang="en">

<body>
    <!-------------------Dưới thanh bar-------------------------->
    <!-------------------Cover & avatar------------------------->
    <div class="hidden" id="GroupHandleRequestUrl" data-url="@Url.Action("GroupRequestHandle", "Groups")"></div>
    <div class="hidden" id="ImageChangeUrl" data-url="@Url.Action("ChangeImage", "Groups")" data-id="@Model.Id"></div>
    <div class="col-md-12 avatar-cover" style="padding:0; height: 410px;">
        @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
        .Height(350).Width(1349).Crop("fill")).BuildImageTag(group.CoverImg,
            new CloudinaryDotNet.StringDictionary("class=cover-img")))
        @foreach (var member in group.GroupMembers)
        {
            if (member.UserId.Equals(currentUserId) && member.RoleInGroup != "user")
            {
                <div class="change-cover">
                    <span class="btn btn-file">
                        <i class="glyphicon glyphicon-camera" style="color: white;"></i>
                        <span style="color: white;">Thay đổi ảnh bìa</span>
                        <input type="file" id="imgInpCover" accept=".jpg, .jpeg, .png, .bmp">
                    </span>
                </div>
            }
        }
        <div class="row">
            <div class="avatar">
                <div class="upload-image">
                    @*<img class="avatar-img" src="Anhtacgia/Jeff%20Kinney_tacgia.jpg" alt="Trolltunga Norway">*@
                    @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                    .Height(200).Width(200).Crop("mpad")).BuildImageTag(group.AvaImg,
                        new CloudinaryDotNet.StringDictionary("class=avatar-img")))
                    @foreach (var member in group.GroupMembers)
                    {
                        if (member.UserId.Equals(currentUserId) && member.RoleInGroup != "user")
                        {
                            <div class="change-avatar">
                                <span class="btn btn-file">
                                    <i class="glyphicon glyphicon-camera" style="color: white;"></i>
                                    <span style="color: white">Thay đổi ảnh cá nhân</span>
                                    <input type="file" id="imgInpAva" accept=".jpg, .jpeg, .png, .bmp">
                                </span>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div>
            <div class="cover-interaction">
                <button class="button buttonRe btn-success" style="color:white;" onclick="location.href='@Url.Action("Setting", "Groups", new { id = Model.Id })'">Cài đặt</button>
                @if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) == null)
                {
                    <button class="button buttonRe btn-success" style="color:white;" onclick="GroupRequestHandle('@Model.Id', '@currentUserId', '1')">Tham gia</button>
                }
                else
                {
                    if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)).RoleInGroup != "creator")
                    {
                        <button class="button buttonRe btn-success" style="color:white;" onclick="GroupRequestHandle('@Model.Id', '@currentUserId', '2')">Rời nhóm</button>
                    }
                }
                <button class="button buttonRe btn-success" style="color:white;" data-toggle="modal" data-target="#ModalReport">Báo cáo</button>
                <div id="ModalReport" class="modal fade" role="dialog">
                    <div class="modal-dialog ">
                        <!-- Modal content-->
                        <div class="modal-content ">
                            <div style="background-color: #F7E8AF;" class="modal-header clearfix">
                                <div class="row">
                                    <div class="col-md-8">
                                        <h4 class="modal-title"><b>Giúp chúng tôi hiểu điều đang xảy ra</b></h4>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-body clearfix">
                                <div class="content">
                                    <div class="row">
                                        <div class="col-md-1" style="margin-top: 5px;">
                                            @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                                        .Height(50).Width(50).Crop("fill")).BuildImageTag(allUser.Find(x => x.Id.Equals(currentUserId)).Avatar,
                                            new CloudinaryDotNet.StringDictionary("class=reportAva")))
                                        </div>
                                        <div class="col-md-11" class="radio">
                                            <div class="radio">
                                                @foreach (var report in reportContentList)
                                                {
                                                    <label style="display: block;">
                                                        <input type="radio" name="optradio" value="@report"> @report
                                                    </label>
                                                }
                                            </div>
                                            <div class="divider-horizontal"></div>
                                            <span id="reportMessage" style="float: left; margin-left: 5%; color: red;"></span>
                                            <div class="BT">
                                                <button id="buttonPost" class="btn btn-default" onclick="PostReport()"
                                                        data-url="@Url.Action("GetReport", "Reports")"
                                                        data-userid="@currentUserId"
                                                        data-bereportedid="@Model.Id"
                                                        data-option="2">
                                                    Gửi
                                                </button>
                                                <button id="buttonCancel" class="btn btn-default" data-dismiss="modal">Hủy</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--------------------------Tên nhóm----------------------------->
    <div class="tennhom"
         style="position: absolute; top: 320px; font-size: 24px; max-width: 350px; overflow: hidden; 
        text-overflow: ellipsis; display: block; text-shadow: 0 0 3px rgba(0, 0, 0, .8); white-space: nowrap;">
        <a style="color: white;" href="@Url.Action("MainPage", "Groups", new { id = Model.Id })">@Html.DisplayFor(model => model.GroupName)</a>
        <br />
        <span class="" style="top:-33px;font-size:60%;">
            @if (Model.GroupType == "Public")
            {
                <span style="color: white;">Nhóm công khai</span>
            }
            else
            {
                <span style="color: white;">Nhóm kím</span>
            }
        </span>
    </div>
    <!-------------------Dưới Covers & Avatar------------------------->
    <div class="container-fluid text-left">
        <div class="row content">
            <div class="col-md-2 col-sm-4 col-xs-12 sidenav">
                <!--------------------------->
                <div id="nhom" class="text-center" class="panel-heading"><b>MÔ TẢ</b></div>
                <br>
                @Html.TextAreaFor(model => model.Description, new { @style = "width:100%; height:100px; resize: none;", @readonly = "readonly" })
                <p>Thành viên : @group.GroupMembers.Count() thành viên</p>

                <div id="nhom" class="text-center" class="panel-heading"><b>NHÓM</b></div>
                <ul class="list-group">
                    <!--DANGVH BỔ SUNG-->
                    @foreach (var grp in listGroupOfUser)
                    {
                    <li>
                        <a href="@Url.Action("MainPage", "Groups", new { id = grp.Id })" data-toggle="tooltip" title="@grp.GroupName">
                            <i class="glyphicon glyphicon-book"></i>
                            <span>@grp.GroupName</span>
                        </a>
                    </li>
                    }
                    <!--DANGVH BỔ SUNG-->
                </ul>
            </div>
            <div class="col-md-10 col-sm-8 col-xs-12 text-left">
                <div class="container pills">
                    <ul class="nav nav-pills">
                        <li class="active"><a data-toggle="pill" href="#infor">Thông tin nhóm</a></li>
                        @foreach (var member in group.GroupMembers)
                        {
                            if (member.UserId.Equals(currentUserId) && member.RoleInGroup != "user")
                            {
                                <li><a data-toggle="pill" href="#request">Yêu cầu tham gia</a></li>
                            }
                        }
                    </ul>
                    <div class="tab-content">
                        <div id="infor" class="tab-pane fade in active">
                            <div class="">
                                @*<form class="form-horizontal editInfor" style="margin-top:5%">*@
                                @if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) == null ||
                                    group.GroupMembers.Where(x => x.UserId.Equals(currentUserId)).FirstOrDefault().RoleInGroup == "user")
                                {
                                    <div class="form-horizontal" style="margin-top:5%">
                                        <div class="form-group editform">
                                            @Html.DisplayNameFor(model => model.GroupName)
                                            <p>@Html.DisplayFor(model => model.GroupName)</p>
                                        </div>
                                        <div class="form-group editform">
                                            @Html.DisplayNameFor(model => model.Description)
                                            <p>@Html.TextAreaFor(model => model.Description, new { @readonly = "readonly", @style = "width:100%; height:100px; resize: none;" })</p>
                                        </div>
                                        <div class="form-group editform">
                                            @Html.DisplayNameFor(model => model.GroupType) :
                                            @Html.DisplayFor(model => model.GroupType)
                                        </div>
                                    </div>
                                }
                                @*@if (Model.GroupMembers.Where(x => x.UserId.Equals(currentUserId)).FirstOrDefault().RoleInGroup != "user")*@
                                else
                                {
                                    using (Html.BeginForm("Setting", "Groups", FormMethod.Post, new { @class = "form-horizontal editInfor", @style = "margin-top:5%" }))
                                    {
                                        @*<form class="form-horizontal editInfor" style="margin-top:5%">*@
                                        @Html.ValidationSummary(true)
                                        @Html.HiddenFor(model => model.Id)
                                        @Html.HiddenFor(model => model.CreatorId)
                                        @Html.HiddenFor(model => model.Lock)
                                        <div class="form-group editform">
                                            @Html.LabelFor(model => model.GroupName)
                                            <p>@Html.EditorFor(model => model.GroupName)</p>
                                            <div class="col-md-10">
                                                @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        @Html.HiddenFor(model => model.Tag)
                                        <div class="form-group editform">
                                            @Html.LabelFor(model => model.Description)
                                            @Html.TextAreaFor(model => model.Description, new { @style = "width:100%; height:100px; resize:none;", @title = Model.Description })
                                            @Html.ValidationMessageFor(model => model.Description)
                                        </div>
                                        <div class="form-group editform">
                                            @Html.LabelFor(model => model.GroupType)
                                            @Html.ValidationMessageFor(model => model.GroupType) <br />
                                            <label class="radio-inline" style="margin-left:50px">
                                                @Html.RadioButtonFor(model => model.GroupType, "Public") Công khai
                                            </label>
                                            <label class="radio-inline" style="margin-left:40px">
                                                @Html.RadioButtonFor(model => model.GroupType, "Private") Kín
                                            </label>
                                        </div>
                                        <div class="form-inline editform" style="margin-left:50px;">
                                            <input type="submit" value="Lưu" class="btn btn-default" />
                                        </div>
                                        @*</form>*@
                                    }
                                }
                                @*</form>*@
                            </div>
                        </div>
                        @if (group.GroupMembers.Find(x => x.UserId.Equals(currentUserId)) != null)
                        {
                            foreach (var member in group.GroupMembers)
                            {
                                if (member.RoleInGroup != "user")
                                {
                                    <div id="request" class="tab-pane fade">
                                        <div class="">
                                            <div class="memberRequest" style="margin-top:5%">
                                                <div class="form-inline">
                                                    <label style="margin-left:30px;font-size:130%;">Yêu cầu tham gia</label>
                                                    <button type="submit" class="btn btn-default" style="margin-left:300px;" onclick="GroupRequestHandle('@Model.Id', '', '5')">Chấp nhận tất cả</button>
                                                    <button type="submit" class="btn btn-default" onclick="GroupRequestHandle('@Model.Id', '', '6')">Từ chối tất cả</button>
                                                </div>
                                                <div class="divider-horizontal"></div>
                                                <div class="col-md-12" style="min-height: 50vh;">
                                                    @foreach (var request in group.ListJoinRequest)
                                                    {
                                                        <div class="col-md-3 avatarthanhvien">
                                                            @(cloudinary.Api.UrlImgUp.Format("jpg").Transform(new CloudinaryDotNet.Transformation()
                                                                .Height(150).Width(150).Crop("fill")).BuildImageTag(allUser.Find(x => x.Id.Equals(request)).Avatar,
                                                                    new CloudinaryDotNet.StringDictionary("class=requestImg")))
                                                            @*<img src="Anhtacgia/James%20Patterson_tacgia.jpg" alt="username" style="margin-bottom:10px;">*@
                                                            <a href="@Url.Action("Details", "Users", new { id = request })" style="float: left;">
                                                                <b>@allUser.Where(x => x.Id.Equals(request)).FirstOrDefault().UserName</b>
                                                            </a>
                                                            <br />
                                                            <br />
                                                            <button type="submit" class="btn btn-default btn-xs" onclick="GroupRequestHandle('@Model.Id', '@request', '3')">Chấp nhận</button>
                                                            <button type="submit" class="btn btn-default btn-xs" onclick="GroupRequestHandle('@Model.Id', '@request', '4')">Từ chối</button>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="loader" class="modal fade" role="dialog">
        <div class="modal-dialog" style="width: 100%; height: 100%; margin: 0;">
            <!-- Modal content-->
            <div class="modal-content" style="background-color: transparent; height: 100%; box-shadow: initial; border-bottom-color: transparent;">
                <div class="loader"></div>
            </div>
        </div>
    </div>
</body>
</html>
@section scripts {
    <link rel="stylesheet" href="~/Content/loader.css" />
    <link rel="stylesheet" href="~/Content/Trangnhom-caidat.css" />
    <script src="~/Scripts/capstone-rename-later-v1.0.js"></script>
    <script src="~/Scripts/Custom/group.js"></script>
    <script src="~/Scripts/Custom/report-action.js"></script>
}
